{"ast":null,"code":"var _jsxFileName = \"/media/donald/C/candy-machine-v2-responsive-ui/src/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport confetti from \"canvas-confetti\";\nimport * as anchor from \"@project-serum/anchor\";\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { GatewayProvider } from '@civic/solana-gateway-react';\nimport Countdown from \"react-countdown\";\nimport { Snackbar, Paper, LinearProgress, Chip } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { toDate, getAtaForMint } from './utils';\nimport { MintButton } from './MintButton';\nimport { awaitTransactionSignatureConfirmation, getCandyMachineState, mintOneToken, CANDY_MACHINE_PROGRAM } from \"./candy-machine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cluster = process.env.REACT_APP_SOLANA_NETWORK.toString();\nconst decimals = process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS ? +process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS.toString() : 9;\nconst splTokenName = process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME ? process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME.toString() : \"TOKEN\";\nconst WalletContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n_c = WalletContainer;\nconst WalletAmount = styled.div`\n  color: black;\n  width: auto;\n  padding: 5px 5px 5px 16px;\n  min-width: 48px;\n  min-height: auto;\n  border-radius: 22px;\n  background-color: var(--main-text-color);\n  box-shadow: 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%);\n  box-sizing: border-box;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  font-weight: 500;\n  line-height: 1.75;\n  text-transform: uppercase;\n  border: 0;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  vertical-align: middle;\n  justify-content: flex-start;\n  gap: 10px;\n`;\n_c2 = WalletAmount;\nconst Wallet = styled.ul`\n  flex: 0 0 auto;\n  margin: 0;\n  padding: 0;\n`;\n_c3 = Wallet;\nconst ConnectButton = styled(WalletMultiButton)`\n  border-radius: 18px !important;\n  padding: 6px 16px;\n  background-color: #4E44CE;\n  margin: 0 auto;\n`;\n_c4 = ConnectButton;\nconst NFT = styled(Paper)`\n  min-width: 500px;\n  margin: 0 auto;\n  padding: 5px 20px 20px 20px;\n  flex: 1 1 auto;\n  backgroundColor: 'transparent';\n`;\n_c5 = NFT;\nconst Card = styled(Paper)`\n  display: inline-block;\n  background-color: var(--countdown-background-color) !important;\n  margin: 5px;\n  min-width: 40px;\n  padding: 24px;\n  h1{\n    margin:0px;\n  }\n`;\n_c6 = Card;\nconst MintButtonContainer = styled.div`\n  button.MuiButton-contained:not(.MuiButton-containedPrimary).Mui-disabled {\n    color: #464646;\n  }\n\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):hover,\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):focus {\n    -webkit-animation: pulse 1s;\n    animation: pulse 1s;\n    box-shadow: 0 0 0 2em rgba(255, 255, 255, 0);\n  }\n\n  @-webkit-keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 #ef8f6e;\n    }\n  }\n\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 #ef8f6e;\n    }\n  }\n`;\n_c7 = MintButtonContainer;\nconst Logo = styled.div`\n  flex: 0 0 auto;\n\n  img {\n    height: 60px;\n  }\n`;\n_c8 = Logo;\nconst Menu = styled.ul`\n  list-style: none;\n  display: inline-flex;\n  flex: 1 0 auto;\n\n  li {\n    margin: 0 12px;\n\n    a {\n      color: var(--main-text-color);\n      list-style-image: none;\n      list-style-position: outside;\n      list-style-type: none;\n      outline: none;\n      text-decoration: none;\n      text-size-adjust: 100%;\n      touch-action: manipulation;\n      transition: color 0.3s;\n      padding-bottom: 15px;\n\n      img {\n        max-height: 26px;\n      }\n    }\n\n    a:hover, a:active {\n      color: rgb(131, 146, 161);\n      border-bottom: 4px solid var(--title-text-color);\n    }\n\n  }\n`;\n_c9 = Menu;\nconst SolExplorerLink = styled.a`\n  color: var(--title-text-color);\n  border-bottom: 1px solid var(--title-text-color);\n  font-weight: bold;\n  list-style-image: none;\n  list-style-position: outside;\n  list-style-type: none;\n  outline: none;\n  text-decoration: none;\n  text-size-adjust: 100%;\n\n  :hover {\n    border-bottom: 2px solid var(--title-text-color);\n  }\n`;\n_c10 = SolExplorerLink;\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-right: 4%;\n  margin-left: 4%;\n  text-align: center;\n  justify-content: center;\n`;\n_c11 = MainContainer;\nconst MintContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n_c12 = MintContainer;\nconst DesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  gap: 20px;\n`;\n_c13 = DesContainer;\nconst Price = styled(Chip)`\n  position: absolute;\n  margin: 5px;\n  font-weight: bold;\n  font-size: 1.2em !important;\n  font-family: 'Patrick Hand', cursive !important;\n`;\n_c14 = Price;\nconst Image = styled.img`\n  height: 400px;\n  width: auto;\n  border-radius: 7px;\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n`;\n_c15 = Image;\nconst BorderLinearProgress = styled(LinearProgress)`\n  margin: 20px;\n  height: 10px !important;\n  border-radius: 30px;\n  border: 2px solid white;\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n  background-color:var(--main-text-color) !important;\n  \n  > div.MuiLinearProgress-barColorPrimary{\n    background-color:var(--title-text-color) !important;\n  }\n\n  > div.MuiLinearProgress-bar1Determinate {\n    border-radius: 30px !important;\n    background-image: linear-gradient(270deg, rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.5));\n  }\n`;\n_c16 = BorderLinearProgress;\nconst ShimmerTitle = styled.h1`\n  margin: 20px auto;\n  text-transform: uppercase;\n  animation: glow 2s ease-in-out infinite alternate;\n  color: var(--main-text-color);\n  @keyframes glow {\n    from {\n      text-shadow: 0 0 20px var(--main-text-color);\n    }\n    to {\n      text-shadow: 0 0 30px var(--title-text-color), 0 0 10px var(--title-text-color);\n    }\n  }\n`;\n_c17 = ShimmerTitle;\n\nconst Home = props => {\n  _s();\n\n  var _candyMachine$state, _candyMachine$state$e, _candyMachine$state2, _candyMachine$state2$;\n\n  const [balance, setBalance] = useState();\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [isActive, setIsActive] = useState(false); // true when countdown completes or whitelisted\n\n  const [solanaExplorerLink, setSolanaExplorerLink] = useState(\"\");\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n  const [isSoldOut, setIsSoldOut] = useState(false);\n  const [payWithSplToken, setPayWithSplToken] = useState(false);\n  const [price, setPrice] = useState(0);\n  const [priceLabel, setPriceLabel] = useState(\"SOL\");\n  const [whitelistPrice, setWhitelistPrice] = useState(0);\n  const [whitelistEnabled, setWhitelistEnabled] = useState(false);\n  const [isBurnToken, setIsBurnToken] = useState(false);\n  const [whitelistTokenBalance, setWhitelistTokenBalance] = useState(0);\n  const [isEnded, setIsEnded] = useState(false);\n  const [endDate, setEndDate] = useState();\n  const [isPresale, setIsPresale] = useState(false);\n  const [isWLOnly, setIsWLOnly] = useState(false);\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: \"\",\n    severity: undefined\n  });\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState();\n  const rpcUrl = props.rpcHost;\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      var _cndy$state$endSettin, _cndy$state$endSettin2;\n\n      if (!wallet) return;\n      const cndy = await getCandyMachineState(wallet, props.candyMachineId, props.connection);\n      setCandyMachine(cndy);\n      setItemsAvailable(cndy.state.itemsAvailable);\n      setItemsRemaining(cndy.state.itemsRemaining);\n      setItemsRedeemed(cndy.state.itemsRedeemed);\n      var divider = 1;\n\n      if (decimals) {\n        divider = +('1' + new Array(decimals).join('0').slice() + '0');\n      } // detect if using spl-token to mint\n\n\n      if (cndy.state.tokenMint) {\n        setPayWithSplToken(true); // Customize your SPL-TOKEN Label HERE\n        // TODO: get spl-token metadata name\n\n        setPriceLabel(splTokenName);\n        setPrice(cndy.state.price.toNumber() / divider);\n        setWhitelistPrice(cndy.state.price.toNumber() / divider);\n      } else {\n        setPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\n        setWhitelistPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\n      } // fetch whitelist token balance\n\n\n      if (cndy.state.whitelistMintSettings) {\n        setWhitelistEnabled(true);\n        setIsBurnToken(cndy.state.whitelistMintSettings.mode.burnEveryTime);\n        setIsPresale(cndy.state.whitelistMintSettings.presale);\n        setIsWLOnly(!isPresale && cndy.state.whitelistMintSettings.discountPrice === null);\n\n        if (cndy.state.whitelistMintSettings.discountPrice !== null && cndy.state.whitelistMintSettings.discountPrice !== cndy.state.price) {\n          if (cndy.state.tokenMint) {\n            var _cndy$state$whitelist;\n\n            setWhitelistPrice(((_cndy$state$whitelist = cndy.state.whitelistMintSettings.discountPrice) === null || _cndy$state$whitelist === void 0 ? void 0 : _cndy$state$whitelist.toNumber()) / divider);\n          } else {\n            var _cndy$state$whitelist2;\n\n            setWhitelistPrice(((_cndy$state$whitelist2 = cndy.state.whitelistMintSettings.discountPrice) === null || _cndy$state$whitelist2 === void 0 ? void 0 : _cndy$state$whitelist2.toNumber()) / LAMPORTS_PER_SOL);\n          }\n        }\n\n        let balance = 0;\n\n        try {\n          var _tokenBalance$value;\n\n          const tokenBalance = await props.connection.getTokenAccountBalance((await getAtaForMint(cndy.state.whitelistMintSettings.mint, wallet.publicKey))[0]);\n          balance = (tokenBalance === null || tokenBalance === void 0 ? void 0 : (_tokenBalance$value = tokenBalance.value) === null || _tokenBalance$value === void 0 ? void 0 : _tokenBalance$value.uiAmount) || 0;\n        } catch (e) {\n          console.error(e);\n          balance = 0;\n        }\n\n        setWhitelistTokenBalance(balance);\n        setIsActive(isPresale && !isEnded && balance > 0);\n      } else {\n        setWhitelistEnabled(false);\n      } // end the mint when date is reached\n\n\n      if (cndy === null || cndy === void 0 ? void 0 : (_cndy$state$endSettin = cndy.state.endSettings) === null || _cndy$state$endSettin === void 0 ? void 0 : _cndy$state$endSettin.endSettingType.date) {\n        setEndDate(toDate(cndy.state.endSettings.number));\n\n        if (cndy.state.endSettings.number.toNumber() < new Date().getTime() / 1000) {\n          setIsEnded(true);\n          setIsActive(false);\n        }\n      } // end the mint when amount is reached\n\n\n      if (cndy === null || cndy === void 0 ? void 0 : (_cndy$state$endSettin2 = cndy.state.endSettings) === null || _cndy$state$endSettin2 === void 0 ? void 0 : _cndy$state$endSettin2.endSettingType.amount) {\n        let limit = Math.min(cndy.state.endSettings.number.toNumber(), cndy.state.itemsAvailable);\n        setItemsAvailable(limit);\n\n        if (cndy.state.itemsRedeemed < limit) {\n          setItemsRemaining(limit - cndy.state.itemsRedeemed);\n        } else {\n          setItemsRemaining(0);\n          cndy.state.isSoldOut = true;\n          setIsEnded(true);\n        }\n      } else {\n        setItemsRemaining(cndy.state.itemsRemaining);\n      }\n\n      if (cndy.state.isSoldOut) {\n        setIsActive(false);\n      }\n    })();\n  };\n\n  const renderGoLiveDateCounter = ({\n    days,\n    hours,\n    minutes,\n    seconds\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        elevation: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: days\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 38\n        }, this), \"Days\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 84\n        }, this), \"Hours\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: minutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 49\n        }, this), \"Mins\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: seconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 17\n        }, this), \"Secs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderEndDateCounter = ({\n    days,\n    hours,\n    minutes\n  }) => {\n    let label = \"\";\n\n    if (days > 0) {\n      label += days + \" days \";\n    }\n\n    if (hours > 0) {\n      label += hours + \" hours \";\n    }\n\n    label += minutes + 1 + \" minutes left to MINT.\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }, this);\n  };\n\n  function displaySuccess(mintPublicKey) {\n    let remaining = itemsRemaining - 1;\n    setItemsRemaining(remaining);\n    setIsSoldOut(remaining === 0);\n\n    if (isBurnToken && whitelistTokenBalance && whitelistTokenBalance > 0) {\n      let balance = whitelistTokenBalance - 1;\n      setWhitelistTokenBalance(balance);\n      setIsActive(isPresale && !isEnded && balance > 0);\n    }\n\n    setItemsRedeemed(itemsRedeemed + 1);\n    const solFeesEstimation = 0.012; // approx\n\n    if (!payWithSplToken && balance && balance > 0) {\n      setBalance(balance - (whitelistEnabled ? whitelistPrice : price) - solFeesEstimation);\n    }\n\n    setSolanaExplorerLink(cluster === \"devnet\" || cluster === \"testnet\" ? \"https://solscan.io/token/\" + mintPublicKey + \"?cluster=\" + cluster : \"https://solscan.io/token/\" + mintPublicKey);\n    throwConfetti();\n  }\n\n  ;\n\n  function throwConfetti() {\n    confetti({\n      particleCount: 400,\n      spread: 70,\n      origin: {\n        y: 0.6\n      }\n    });\n  }\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n\n      if (wallet && (candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.program) && wallet.publicKey) {\n        var _status;\n\n        const mint = anchor.web3.Keypair.generate();\n        const mintTxId = (await mintOneToken(candyMachine, wallet.publicKey, mint))[0];\n        let status = {\n          err: true\n        };\n\n        if (mintTxId) {\n          status = await awaitTransactionSignatureConfirmation(mintTxId, props.txTimeout, props.connection, 'singleGossip', true);\n        }\n\n        if (!((_status = status) === null || _status === void 0 ? void 0 : _status.err)) {\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success'\n          }); // update front-end amounts\n\n          displaySuccess(mint.publicKey);\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error'\n          });\n        }\n      }\n    } catch (error) {\n      // TODO: blech:\n      let message = error.msg || 'Minting failed! Please try again!';\n\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction Timeout! Please try again.';\n        } else if (error.message.indexOf('0x138')) {} else if (error.message.indexOf('0x137')) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\"\n      });\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n  useEffect(refreshCandyMachineState, [wallet, props.candyMachineId, props.connection, isEnded, isPresale]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(MainContainer, {\n      children: [/*#__PURE__*/_jsxDEV(WalletContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"\",\n              src: \"logo.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 102\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Wallet, {\n          children: wallet ? /*#__PURE__*/_jsxDEV(WalletAmount, {\n            children: [(balance || 0).toLocaleString(), \" SOL\", /*#__PURE__*/_jsxDEV(ConnectButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(ConnectButton, {\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ShimmerTitle, {\n        children: \"MINT IS LIVE !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MintContainer, {\n        children: /*#__PURE__*/_jsxDEV(DesContainer, {\n          children: /*#__PURE__*/_jsxDEV(NFT, {\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"My NFT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Price, {\n                label: isActive && whitelistEnabled && whitelistTokenBalance > 0 ? whitelistPrice + \" \" + priceLabel : price + \" \" + priceLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Image, {\n                src: \"cool-cats.gif\",\n                alt: \"NFT To Mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 169\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 29\n            }, this), wallet && isActive && whitelistEnabled && whitelistTokenBalance > 0 && isBurnToken && /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"You own \", whitelistTokenBalance, \" WL mint \", whitelistTokenBalance > 1 ? \"tokens\" : \"token\", \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 31\n            }, this), wallet && isActive && whitelistEnabled && whitelistTokenBalance > 0 && !isBurnToken && /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"You are whitelisted and allowed to mint.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 31\n            }, this), wallet && isActive && endDate && Date.now() < endDate.getTime() && /*#__PURE__*/_jsxDEV(Countdown, {\n              date: toDate(candyMachine === null || candyMachine === void 0 ? void 0 : (_candyMachine$state = candyMachine.state) === null || _candyMachine$state === void 0 ? void 0 : (_candyMachine$state$e = _candyMachine$state.endSettings) === null || _candyMachine$state$e === void 0 ? void 0 : _candyMachine$state$e.number),\n              onMount: ({\n                completed\n              }) => completed && setIsEnded(true),\n              onComplete: () => {\n                setIsEnded(true);\n              },\n              renderer: renderEndDateCounter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 31\n            }, this), wallet && isActive && /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"TOTAL MINTED : \", itemsRedeemed, \" / \", itemsAvailable]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 31\n            }, this), wallet && isActive && /*#__PURE__*/_jsxDEV(BorderLinearProgress, {\n              variant: \"determinate\",\n              value: 100 - itemsRemaining * 100 / itemsAvailable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MintButtonContainer, {\n              children: !isActive && !isEnded && (candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.state.goLiveDate) && (!isWLOnly || whitelistTokenBalance > 0) ? /*#__PURE__*/_jsxDEV(Countdown, {\n                date: toDate(candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.state.goLiveDate),\n                onMount: ({\n                  completed\n                }) => completed && setIsActive(!isEnded),\n                onComplete: () => {\n                  setIsActive(!isEnded);\n                },\n                renderer: renderGoLiveDateCounter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 37\n              }, this) : !wallet ? /*#__PURE__*/_jsxDEV(ConnectButton, {\n                children: \"Connect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 45\n              }, this) : !isWLOnly || whitelistTokenBalance > 0 ? (candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.state.gatekeeper) && wallet.publicKey && wallet.signTransaction ? /*#__PURE__*/_jsxDEV(GatewayProvider, {\n                wallet: {\n                  publicKey: wallet.publicKey || new PublicKey(CANDY_MACHINE_PROGRAM),\n                  //@ts-ignore\n                  signTransaction: wallet.signTransaction\n                } // // Replace with following when added\n                // gatekeeperNetwork={candyMachine.state.gatekeeper_network}\n                ,\n                gatekeeperNetwork: candyMachine === null || candyMachine === void 0 ? void 0 : (_candyMachine$state2 = candyMachine.state) === null || _candyMachine$state2 === void 0 ? void 0 : (_candyMachine$state2$ = _candyMachine$state2.gatekeeper) === null || _candyMachine$state2$ === void 0 ? void 0 : _candyMachine$state2$.gatekeeperNetwork // This is the ignite (captcha) network\n                /// Don't need this for mainnet\n                ,\n                clusterUrl: rpcUrl,\n                options: {\n                  autoShowModal: false\n                },\n                children: /*#__PURE__*/_jsxDEV(MintButton, {\n                  candyMachine: candyMachine,\n                  isMinting: isMinting,\n                  isActive: isActive,\n                  isEnded: isEnded,\n                  isSoldOut: isSoldOut,\n                  onMint: onMint\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(MintButton, {\n                candyMachine: candyMachine,\n                isMinting: isMinting,\n                isActive: isActive,\n                isEnded: isEnded,\n                isSoldOut: isSoldOut,\n                onMint: onMint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Mint is private.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 29\n            }, this), wallet && isActive && solanaExplorerLink && /*#__PURE__*/_jsxDEV(SolExplorerLink, {\n              href: solanaExplorerLink,\n              target: \"_blank\",\n              children: \"View on Solscan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alertState.open,\n      autoHideDuration: 6000,\n      onClose: () => setAlertState({ ...alertState,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setAlertState({ ...alertState,\n          open: false\n        }),\n        severity: alertState.severity,\n        children: alertState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 528,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"hmn88zCSRwfJBWVkcPlWsB4G9Nk=\", false, function () {\n  return [useAnchorWallet];\n});\n\n_c18 = Home;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n\n$RefreshReg$(_c, \"WalletContainer\");\n$RefreshReg$(_c2, \"WalletAmount\");\n$RefreshReg$(_c3, \"Wallet\");\n$RefreshReg$(_c4, \"ConnectButton\");\n$RefreshReg$(_c5, \"NFT\");\n$RefreshReg$(_c6, \"Card\");\n$RefreshReg$(_c7, \"MintButtonContainer\");\n$RefreshReg$(_c8, \"Logo\");\n$RefreshReg$(_c9, \"Menu\");\n$RefreshReg$(_c10, \"SolExplorerLink\");\n$RefreshReg$(_c11, \"MainContainer\");\n$RefreshReg$(_c12, \"MintContainer\");\n$RefreshReg$(_c13, \"DesContainer\");\n$RefreshReg$(_c14, \"Price\");\n$RefreshReg$(_c15, \"Image\");\n$RefreshReg$(_c16, \"BorderLinearProgress\");\n$RefreshReg$(_c17, \"ShimmerTitle\");\n$RefreshReg$(_c18, \"Home\");","map":{"version":3,"sources":["/media/donald/C/candy-machine-v2-responsive-ui/src/Home.tsx"],"names":["useEffect","useState","styled","confetti","anchor","LAMPORTS_PER_SOL","PublicKey","useAnchorWallet","WalletMultiButton","GatewayProvider","Countdown","Snackbar","Paper","LinearProgress","Chip","Alert","toDate","getAtaForMint","MintButton","awaitTransactionSignatureConfirmation","getCandyMachineState","mintOneToken","CANDY_MACHINE_PROGRAM","cluster","process","env","REACT_APP_SOLANA_NETWORK","toString","decimals","REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS","splTokenName","REACT_APP_SPL_TOKEN_TO_MINT_NAME","WalletContainer","div","WalletAmount","Wallet","ul","ConnectButton","NFT","Card","MintButtonContainer","Logo","Menu","SolExplorerLink","a","MainContainer","MintContainer","DesContainer","Price","Image","img","BorderLinearProgress","ShimmerTitle","h1","Home","props","balance","setBalance","isMinting","setIsMinting","isActive","setIsActive","solanaExplorerLink","setSolanaExplorerLink","itemsAvailable","setItemsAvailable","itemsRedeemed","setItemsRedeemed","itemsRemaining","setItemsRemaining","isSoldOut","setIsSoldOut","payWithSplToken","setPayWithSplToken","price","setPrice","priceLabel","setPriceLabel","whitelistPrice","setWhitelistPrice","whitelistEnabled","setWhitelistEnabled","isBurnToken","setIsBurnToken","whitelistTokenBalance","setWhitelistTokenBalance","isEnded","setIsEnded","endDate","setEndDate","isPresale","setIsPresale","isWLOnly","setIsWLOnly","alertState","setAlertState","open","message","severity","undefined","wallet","candyMachine","setCandyMachine","rpcUrl","rpcHost","refreshCandyMachineState","cndy","candyMachineId","connection","state","divider","Array","join","slice","tokenMint","toNumber","whitelistMintSettings","mode","burnEveryTime","presale","discountPrice","tokenBalance","getTokenAccountBalance","mint","publicKey","value","uiAmount","e","console","error","endSettings","endSettingType","date","number","Date","getTime","amount","limit","Math","min","renderGoLiveDateCounter","days","hours","minutes","seconds","renderEndDateCounter","label","displaySuccess","mintPublicKey","remaining","solFeesEstimation","throwConfetti","particleCount","spread","origin","y","onMint","program","web3","Keypair","generate","mintTxId","status","err","txTimeout","msg","indexOf","code","getBalance","toLocaleString","now","completed","goLiveDate","gatekeeper","signTransaction","gatekeeperNetwork","autoShowModal"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,SAAQC,gBAAR,EAA0BC,SAA1B,QAA0C,iBAA1C;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,iBAAR,QAAgC,iCAAhC;AACA,SAAQC,eAAR,QAA8B,6BAA9B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,cAAzB,EAAyCC,IAAzC,QAAoD,mBAApD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAAQC,MAAR,EAA4BC,aAA5B,QAAgD,SAAhD;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAEIC,qCAFJ,EAGIC,oBAHJ,EAIIC,YAJJ,EAKIC,qBALJ,QAMO,iBANP;;AAQA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAZ,CAAsCC,QAAtC,EAAhB;AACA,MAAMC,QAAQ,GAAGJ,OAAO,CAACC,GAAR,CAAYI,oCAAZ,GAAmD,CAACL,OAAO,CAACC,GAAR,CAAYI,oCAAZ,CAAkDF,QAAlD,EAApD,GAAmH,CAApI;AACA,MAAMG,YAAY,GAAGN,OAAO,CAACC,GAAR,CAAYM,gCAAZ,GAA+CP,OAAO,CAACC,GAAR,CAAYM,gCAAZ,CAA6CJ,QAA7C,EAA/C,GAAyG,OAA9H;AAEA,MAAMK,eAAe,GAAG9B,MAAM,CAAC+B,GAAI;AACnC;AACA;AACA;AACA;AACA,CALA;KAAMD,e;AAON,MAAME,YAAY,GAAGhC,MAAM,CAAC+B,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;MAAMC,Y;AA0BN,MAAMC,MAAM,GAAGjC,MAAM,CAACkC,EAAG;AACzB;AACA;AACA;AACA,CAJA;MAAMD,M;AAMN,MAAME,aAAa,GAAGnC,MAAM,CAACM,iBAAD,CAAoB;AAChD;AACA;AACA;AACA;AACA,CALA;MAAM6B,a;AAON,MAAMC,GAAG,GAAGpC,MAAM,CAACU,KAAD,CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA,CANA;MAAM0B,G;AAQN,MAAMC,IAAI,GAAGrC,MAAM,CAACU,KAAD,CAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAM2B,I;AAWN,MAAMC,mBAAmB,GAAGtC,MAAM,CAAC+B,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;MAAMO,mB;AAyBN,MAAMC,IAAI,GAAGvC,MAAM,CAAC+B,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA,CANA;MAAMQ,I;AAON,MAAMC,IAAI,GAAGxC,MAAM,CAACkC,EAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/BA;MAAMM,I;AAiCN,MAAMC,eAAe,GAAGzC,MAAM,CAAC0C,CAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;OAAMD,e;AAgBN,MAAME,aAAa,GAAG3C,MAAM,CAAC+B,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;OAAMY,a;AAWN,MAAMC,aAAa,GAAG5C,MAAM,CAAC+B,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;OAAMa,a;AAQN,MAAMC,YAAY,GAAG7C,MAAM,CAAC+B,GAAI;AAChC;AACA;AACA;AACA;AACA,CALA;OAAMc,Y;AAON,MAAMC,KAAK,GAAG9C,MAAM,CAACY,IAAD,CAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,CANA;OAAMkC,K;AAQN,MAAMC,KAAK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","sourcesContent":["import {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport confetti from \"canvas-confetti\";\nimport * as anchor from \"@project-serum/anchor\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {useAnchorWallet} from \"@solana/wallet-adapter-react\";\nimport {WalletMultiButton} from \"@solana/wallet-adapter-react-ui\";\nimport {GatewayProvider} from '@civic/solana-gateway-react';\nimport Countdown from \"react-countdown\";\nimport {Snackbar, Paper, LinearProgress, Chip} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {toDate, AlertState, getAtaForMint} from './utils';\nimport {MintButton} from './MintButton';\nimport {\n    CandyMachine,\n    awaitTransactionSignatureConfirmation,\n    getCandyMachineState,\n    mintOneToken,\n    CANDY_MACHINE_PROGRAM,\n} from \"./candy-machine\";\n\nconst cluster = process.env.REACT_APP_SOLANA_NETWORK!.toString();\nconst decimals = process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS ? +process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS!.toString() : 9;\nconst splTokenName = process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME ? process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME.toString() : \"TOKEN\";\n\nconst WalletContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst WalletAmount = styled.div`\n  color: black;\n  width: auto;\n  padding: 5px 5px 5px 16px;\n  min-width: 48px;\n  min-height: auto;\n  border-radius: 22px;\n  background-color: var(--main-text-color);\n  box-shadow: 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%);\n  box-sizing: border-box;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  font-weight: 500;\n  line-height: 1.75;\n  text-transform: uppercase;\n  border: 0;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  vertical-align: middle;\n  justify-content: flex-start;\n  gap: 10px;\n`;\n\nconst Wallet = styled.ul`\n  flex: 0 0 auto;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ConnectButton = styled(WalletMultiButton)`\n  border-radius: 18px !important;\n  padding: 6px 16px;\n  background-color: #4E44CE;\n  margin: 0 auto;\n`;\n\nconst NFT = styled(Paper)`\n  min-width: 500px;\n  margin: 0 auto;\n  padding: 5px 20px 20px 20px;\n  flex: 1 1 auto;\n  backgroundColor: 'transparent';\n`;\n\nconst Card = styled(Paper)`\n  display: inline-block;\n  background-color: var(--countdown-background-color) !important;\n  margin: 5px;\n  min-width: 40px;\n  padding: 24px;\n  h1{\n    margin:0px;\n  }\n`;\n\nconst MintButtonContainer = styled.div`\n  button.MuiButton-contained:not(.MuiButton-containedPrimary).Mui-disabled {\n    color: #464646;\n  }\n\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):hover,\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):focus {\n    -webkit-animation: pulse 1s;\n    animation: pulse 1s;\n    box-shadow: 0 0 0 2em rgba(255, 255, 255, 0);\n  }\n\n  @-webkit-keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 #ef8f6e;\n    }\n  }\n\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 #ef8f6e;\n    }\n  }\n`;\n\nconst Logo = styled.div`\n  flex: 0 0 auto;\n\n  img {\n    height: 60px;\n  }\n`;\nconst Menu = styled.ul`\n  list-style: none;\n  display: inline-flex;\n  flex: 1 0 auto;\n\n  li {\n    margin: 0 12px;\n\n    a {\n      color: var(--main-text-color);\n      list-style-image: none;\n      list-style-position: outside;\n      list-style-type: none;\n      outline: none;\n      text-decoration: none;\n      text-size-adjust: 100%;\n      touch-action: manipulation;\n      transition: color 0.3s;\n      padding-bottom: 15px;\n\n      img {\n        max-height: 26px;\n      }\n    }\n\n    a:hover, a:active {\n      color: rgb(131, 146, 161);\n      border-bottom: 4px solid var(--title-text-color);\n    }\n\n  }\n`;\n\nconst SolExplorerLink = styled.a`\n  color: var(--title-text-color);\n  border-bottom: 1px solid var(--title-text-color);\n  font-weight: bold;\n  list-style-image: none;\n  list-style-position: outside;\n  list-style-type: none;\n  outline: none;\n  text-decoration: none;\n  text-size-adjust: 100%;\n\n  :hover {\n    border-bottom: 2px solid var(--title-text-color);\n  }\n`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-right: 4%;\n  margin-left: 4%;\n  text-align: center;\n  justify-content: center;\n`;\n\nconst MintContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nconst DesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  gap: 20px;\n`;\n\nconst Price = styled(Chip)`\n  position: absolute;\n  margin: 5px;\n  font-weight: bold;\n  font-size: 1.2em !important;\n  font-family: 'Patrick Hand', cursive !important;\n`;\n\nconst Image = styled.img`\n  height: 400px;\n  width: auto;\n  border-radius: 7px;\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n`;\n\nconst BorderLinearProgress = styled(LinearProgress)`\n  margin: 20px;\n  height: 10px !important;\n  border-radius: 30px;\n  border: 2px solid white;\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n  background-color:var(--main-text-color) !important;\n  \n  > div.MuiLinearProgress-barColorPrimary{\n    background-color:var(--title-text-color) !important;\n  }\n\n  > div.MuiLinearProgress-bar1Determinate {\n    border-radius: 30px !important;\n    background-image: linear-gradient(270deg, rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.5));\n  }\n`;\n\nconst ShimmerTitle = styled.h1`\n  margin: 20px auto;\n  text-transform: uppercase;\n  animation: glow 2s ease-in-out infinite alternate;\n  color: var(--main-text-color);\n  @keyframes glow {\n    from {\n      text-shadow: 0 0 20px var(--main-text-color);\n    }\n    to {\n      text-shadow: 0 0 30px var(--title-text-color), 0 0 10px var(--title-text-color);\n    }\n  }\n`;\n\nexport interface HomeProps {\n    candyMachineId: anchor.web3.PublicKey;\n    connection: anchor.web3.Connection;\n    txTimeout: number;\n    rpcHost: string;\n}\n\nconst Home = (props: HomeProps) => {\n    const [balance, setBalance] = useState<number>();\n    const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n    const [isActive, setIsActive] = useState(false); // true when countdown completes or whitelisted\n    const [solanaExplorerLink, setSolanaExplorerLink] = useState<string>(\"\");\n    const [itemsAvailable, setItemsAvailable] = useState(0);\n    const [itemsRedeemed, setItemsRedeemed] = useState(0);\n    const [itemsRemaining, setItemsRemaining] = useState(0);\n    const [isSoldOut, setIsSoldOut] = useState(false);\n    const [payWithSplToken, setPayWithSplToken] = useState(false);\n    const [price, setPrice] = useState(0);\n    const [priceLabel, setPriceLabel] = useState<string>(\"SOL\");\n    const [whitelistPrice, setWhitelistPrice] = useState(0);\n    const [whitelistEnabled, setWhitelistEnabled] = useState(false);\n    const [isBurnToken, setIsBurnToken] = useState(false);\n    const [whitelistTokenBalance, setWhitelistTokenBalance] = useState(0);\n    const [isEnded, setIsEnded] = useState(false);\n    const [endDate, setEndDate] = useState<Date>();\n    const [isPresale, setIsPresale] = useState(false);\n    const [isWLOnly, setIsWLOnly] = useState(false);\n\n    const [alertState, setAlertState] = useState<AlertState>({\n        open: false,\n        message: \"\",\n        severity: undefined,\n    });\n\n    const wallet = useAnchorWallet();\n    const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n    const rpcUrl = props.rpcHost;\n\n    const refreshCandyMachineState = () => {\n        (async () => {\n            if (!wallet) return;\n\n            const cndy = await getCandyMachineState(\n                wallet as anchor.Wallet,\n                props.candyMachineId,\n                props.connection\n            );\n\n            setCandyMachine(cndy);\n            setItemsAvailable(cndy.state.itemsAvailable);\n            setItemsRemaining(cndy.state.itemsRemaining);\n            setItemsRedeemed(cndy.state.itemsRedeemed);\n\n            var divider = 1;\n            if (decimals) {\n                divider = +('1' + new Array(decimals).join('0').slice() + '0');\n            }\n\n            // detect if using spl-token to mint\n            if (cndy.state.tokenMint) {\n                setPayWithSplToken(true);\n                // Customize your SPL-TOKEN Label HERE\n                // TODO: get spl-token metadata name\n                setPriceLabel(splTokenName);\n                setPrice(cndy.state.price.toNumber() / divider);\n                setWhitelistPrice(cndy.state.price.toNumber() / divider);\n            }else {\n                setPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\n                setWhitelistPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\n            }\n\n\n            // fetch whitelist token balance\n            if (cndy.state.whitelistMintSettings) {\n                setWhitelistEnabled(true);\n                setIsBurnToken(cndy.state.whitelistMintSettings.mode.burnEveryTime);\n                setIsPresale(cndy.state.whitelistMintSettings.presale);\n                setIsWLOnly(!isPresale && cndy.state.whitelistMintSettings.discountPrice === null);\n\n                if (cndy.state.whitelistMintSettings.discountPrice !== null && cndy.state.whitelistMintSettings.discountPrice !== cndy.state.price) {\n                    if (cndy.state.tokenMint) {\n                        setWhitelistPrice(cndy.state.whitelistMintSettings.discountPrice?.toNumber() / divider);\n                    } else {\n                        setWhitelistPrice(cndy.state.whitelistMintSettings.discountPrice?.toNumber() / LAMPORTS_PER_SOL);\n                    }\n                }\n\n                let balance = 0;\n                try {\n                    const tokenBalance =\n                        await props.connection.getTokenAccountBalance(\n                            (\n                                await getAtaForMint(\n                                    cndy.state.whitelistMintSettings.mint,\n                                    wallet.publicKey,\n                                )\n                            )[0],\n                        );\n\n                    balance = tokenBalance?.value?.uiAmount || 0;\n                } catch (e) {\n                    console.error(e);\n                    balance = 0;\n                }\n                setWhitelistTokenBalance(balance);\n                setIsActive(isPresale && !isEnded && balance > 0);\n            } else {\n                setWhitelistEnabled(false);\n            }\n\n            // end the mint when date is reached\n            if (cndy?.state.endSettings?.endSettingType.date) {\n                setEndDate(toDate(cndy.state.endSettings.number));\n                if (\n                    cndy.state.endSettings.number.toNumber() <\n                    new Date().getTime() / 1000\n                ) {\n                    setIsEnded(true);\n                    setIsActive(false);\n                }\n            }\n            // end the mint when amount is reached\n            if (cndy?.state.endSettings?.endSettingType.amount) {\n                let limit = Math.min(\n                    cndy.state.endSettings.number.toNumber(),\n                    cndy.state.itemsAvailable,\n                );\n                setItemsAvailable(limit);\n                if (cndy.state.itemsRedeemed < limit) {\n                    setItemsRemaining(limit - cndy.state.itemsRedeemed);\n                } else {\n                    setItemsRemaining(0);\n                    cndy.state.isSoldOut = true;\n                    setIsEnded(true);\n                }\n            } else {\n                setItemsRemaining(cndy.state.itemsRemaining);\n            }\n\n            if (cndy.state.isSoldOut) {\n                setIsActive(false);\n            }\n        })();\n    };\n\n    const renderGoLiveDateCounter = ({days, hours, minutes, seconds}: any) => {\n        return (\n            <div><Card elevation={1}><h1>{days}</h1>Days</Card><Card elevation={1}><h1>{hours}</h1>\n                Hours</Card><Card elevation={1}><h1>{minutes}</h1>Mins</Card><Card elevation={1}>\n                <h1>{seconds}</h1>Secs</Card></div>\n        );\n    };\n\n    const renderEndDateCounter = ({days, hours, minutes}: any) => {\n        let label = \"\";\n        if (days > 0) {\n            label += days + \" days \"\n        }\n        if (hours > 0) {\n            label += hours + \" hours \"\n        }\n        label += (minutes+1) + \" minutes left to MINT.\"\n        return (\n            <div><h3>{label}</h3></div>\n        );\n    };\n\n    function displaySuccess(mintPublicKey: any): void {\n        let remaining = itemsRemaining - 1;\n        setItemsRemaining(remaining);\n        setIsSoldOut(remaining === 0);\n        if (isBurnToken && whitelistTokenBalance && whitelistTokenBalance > 0) {\n            let balance = whitelistTokenBalance - 1;\n            setWhitelistTokenBalance(balance);\n            setIsActive(isPresale && !isEnded && balance > 0);\n        }\n        setItemsRedeemed(itemsRedeemed + 1);\n        const solFeesEstimation = 0.012; // approx\n        if (!payWithSplToken && balance && balance > 0) {\n            setBalance(balance - (whitelistEnabled ? whitelistPrice : price) - solFeesEstimation);\n        }\n        setSolanaExplorerLink(cluster === \"devnet\" || cluster === \"testnet\"\n            ? (\"https://solscan.io/token/\" + mintPublicKey + \"?cluster=\" + cluster)\n            : (\"https://solscan.io/token/\" + mintPublicKey));\n        throwConfetti();\n    };\n\n    function throwConfetti(): void {\n        confetti({\n            particleCount: 400,\n            spread: 70,\n            origin: {y: 0.6},\n        });\n    }\n\n    const onMint = async () => {\n        try {\n            setIsMinting(true);\n            if (wallet && candyMachine?.program && wallet.publicKey) {\n                const mint = anchor.web3.Keypair.generate();\n                const mintTxId = (\n                    await mintOneToken(candyMachine, wallet.publicKey, mint)\n                )[0];\n\n                let status: any = {err: true};\n                if (mintTxId) {\n                    status = await awaitTransactionSignatureConfirmation(\n                        mintTxId,\n                        props.txTimeout,\n                        props.connection,\n                        'singleGossip',\n                        true,\n                    );\n                }\n\n                if (!status?.err) {\n                    setAlertState({\n                        open: true,\n                        message: 'Congratulations! Mint succeeded!',\n                        severity: 'success',\n                    });\n\n                    // update front-end amounts\n                    displaySuccess(mint.publicKey);\n                } else {\n                    setAlertState({\n                        open: true,\n                        message: 'Mint failed! Please try again!',\n                        severity: 'error',\n                    });\n                }\n            }\n        } catch (error: any) {\n            // TODO: blech:\n            let message = error.msg || 'Minting failed! Please try again!';\n            if (!error.msg) {\n                if (!error.message) {\n                    message = 'Transaction Timeout! Please try again.';\n                } else if (error.message.indexOf('0x138')) {\n                } else if (error.message.indexOf('0x137')) {\n                    message = `SOLD OUT!`;\n                } else if (error.message.indexOf('0x135')) {\n                    message = `Insufficient funds to mint. Please fund your wallet.`;\n                }\n            } else {\n                if (error.code === 311) {\n                    message = `SOLD OUT!`;\n                } else if (error.code === 312) {\n                    message = `Minting period hasn't started yet.`;\n                }\n            }\n\n            setAlertState({\n                open: true,\n                message,\n                severity: \"error\",\n            });\n        } finally {\n            setIsMinting(false);\n        }\n    };\n\n\n    useEffect(() => {\n        (async () => {\n            if (wallet) {\n                const balance = await props.connection.getBalance(wallet.publicKey);\n                setBalance(balance / LAMPORTS_PER_SOL);\n            }\n        })();\n    }, [wallet, props.connection]);\n\n    useEffect(refreshCandyMachineState, [\n        wallet,\n        props.candyMachineId,\n        props.connection,\n        isEnded,\n        isPresale\n    ]);\n\n    return (\n        <main>\n            <MainContainer>\n                <WalletContainer>\n                    <Logo><a href=\"http://localhost:3000/\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"\"\n                                                                                                          src=\"logo.png\"/></a></Logo>\n                    <Menu>\n                    </Menu>\n                    <Wallet>\n                        {wallet ?\n                            <WalletAmount>{(balance || 0).toLocaleString()} SOL<ConnectButton/></WalletAmount> :\n                            <ConnectButton>Connect Wallet</ConnectButton>}\n                    </Wallet>\n                </WalletContainer>\n                <ShimmerTitle>MINT IS LIVE !</ShimmerTitle>\n                <br/>\n\n\n                <MintContainer>\n                    <DesContainer>\n                        <NFT elevation={3}>\n                            <h2>My NFT</h2>\n                            <br/>\n                            <div><Price\n                                label={isActive && whitelistEnabled && (whitelistTokenBalance > 0) ? (whitelistPrice + \" \" + priceLabel) : (price + \" \" + priceLabel)}/><Image\n                                src=\"cool-cats.gif\"\n                                alt=\"NFT To Mint\"/></div>\n                            <br/>\n                            {wallet && isActive && whitelistEnabled && (whitelistTokenBalance > 0) && isBurnToken &&\n                              <h3>You own {whitelistTokenBalance} WL mint {whitelistTokenBalance > 1 ? \"tokens\" : \"token\" }.</h3>}\n                            {wallet && isActive && whitelistEnabled && (whitelistTokenBalance > 0) && !isBurnToken &&\n                              <h3>You are whitelisted and allowed to mint.</h3>}\n\n                            {wallet && isActive && endDate && Date.now() < endDate.getTime() &&\n                              <Countdown\n                                date={toDate(candyMachine?.state?.endSettings?.number)}\n                                onMount={({completed}) => completed && setIsEnded(true)}\n                                onComplete={() => {\n                                    setIsEnded(true);\n                                }}\n                                renderer={renderEndDateCounter}\n                              />}\n                            {wallet && isActive &&\n                              <h3>TOTAL MINTED : {itemsRedeemed} / {itemsAvailable}</h3>}\n                            {wallet && isActive && <BorderLinearProgress variant=\"determinate\"\n                                                                         value={100 - (itemsRemaining * 100 / itemsAvailable)}/>}\n                            <br/>\n                            <MintButtonContainer>\n                                {!isActive && !isEnded && candyMachine?.state.goLiveDate && (!isWLOnly || whitelistTokenBalance > 0) ? (\n                                    <Countdown\n                                        date={toDate(candyMachine?.state.goLiveDate)}\n                                        onMount={({completed}) => completed && setIsActive(!isEnded)}\n                                        onComplete={() => {\n                                            setIsActive(!isEnded);\n                                        }}\n                                        renderer={renderGoLiveDateCounter}\n                                    />) : (\n                                    !wallet ? (\n                                            <ConnectButton>Connect Wallet</ConnectButton>\n                                        ) : (!isWLOnly || whitelistTokenBalance > 0) ?\n                                        candyMachine?.state.gatekeeper &&\n                                        wallet.publicKey &&\n                                        wallet.signTransaction ? (\n                                            <GatewayProvider\n                                                wallet={{\n                                                    publicKey:\n                                                        wallet.publicKey ||\n                                                        new PublicKey(CANDY_MACHINE_PROGRAM),\n                                                    //@ts-ignore\n                                                    signTransaction: wallet.signTransaction,\n                                                }}\n                                                // // Replace with following when added\n                                                // gatekeeperNetwork={candyMachine.state.gatekeeper_network}\n                                                gatekeeperNetwork={\n                                                    candyMachine?.state?.gatekeeper?.gatekeeperNetwork\n                                                } // This is the ignite (captcha) network\n                                                /// Don't need this for mainnet\n                                                clusterUrl={rpcUrl}\n                                                options={{autoShowModal: false}}\n                                            >\n                                                <MintButton\n                                                    candyMachine={candyMachine}\n                                                    isMinting={isMinting}\n                                                    isActive={isActive}\n                                                    isEnded={isEnded}\n                                                    isSoldOut={isSoldOut}\n                                                    onMint={onMint}\n                                                />\n                                            </GatewayProvider>\n                                        ) : (\n                                            <MintButton\n                                                candyMachine={candyMachine}\n                                                isMinting={isMinting}\n                                                isActive={isActive}\n                                                isEnded={isEnded}\n                                                isSoldOut={isSoldOut}\n                                                onMint={onMint}\n                                            />\n                                        ) :\n                                        <h1>Mint is private.</h1>\n                                        )}\n                            </MintButtonContainer>\n                            <br/>\n                            {wallet && isActive && solanaExplorerLink &&\n                              <SolExplorerLink href={solanaExplorerLink} target=\"_blank\">View on Solscan</SolExplorerLink>}\n                        </NFT>\n                    </DesContainer>\n                </MintContainer>\n            </MainContainer>\n            <Snackbar\n                open={alertState.open}\n                autoHideDuration={6000}\n                onClose={() => setAlertState({...alertState, open: false})}\n            >\n                <Alert\n                    onClose={() => setAlertState({...alertState, open: false})}\n                    severity={alertState.severity}\n                >\n                    {alertState.message}\n                </Alert>\n            </Snackbar>\n        </main>\n    );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}